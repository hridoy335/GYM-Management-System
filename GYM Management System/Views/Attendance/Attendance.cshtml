
@{
    ViewBag.Title = "Attendance";
    Layout = null;
}

@*<h2>Attendance</h2>*@

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <title>Attendance</title>
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="shortcut icon" href="favicon_16.ico" />
    <link rel="bookmark" href="favicon_16.ico" />
    <!-- site css -->
    <link rel="stylesheet" href="~/Content/dist/css/site.min.css">
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,800,700,400italic,600italic,700italic,800italic,300italic" rel="stylesheet" type="text/css">
    <!-- <link href='http://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'> -->
    <!-- HTML5 shim, for IE6-8 support of HTML5 elements. All other JS at the end of file. -->
    <!--[if lt IE 9]>
      <script src="js/html5shiv.js"></script>
      <script src="js/respond.min.js"></script>
    <![endif]-->
    <script type="text/javascript" src="~/Content/dist/js/site.min.js"></script>
    <style>

        body {
            padding-top: 40px;
            padding-bottom: 40px;
            background-color: #303641;
            color: #C1C3C6
        }
    </style>
</head>
<body>

    @*<h2>@ViewBag.a</h2>*@
    <h3 class="form-signin-heading">Please sign in for your attendance</h3>
    @*<h4 class="alert-success">@ViewBag.employeewelcome</h4>
    <h4 class="alert-success">@ViewBag.clientwelcome</h4>*@
    

    <div class="container">


        <form class="form-signin" action=@Url.Action("Attendance","Attendance") method="post">
            <br /> <br />
            <div id="clock">
                <canvas id="canvas" width="350" height="300"
                        style="background-color: #303641"></canvas>

                <script>
                    var canvas = document.getElementById("canvas");
                    var ctx = canvas.getContext("2d");
                    var radius = canvas.height / 2;
                    ctx.translate(radius, radius);
                    radius = radius * 0.80
                    setInterval(drawClock, 1000);

                    function drawClock() {
                        drawFace(ctx, radius);
                        drawNumbers(ctx, radius);
                        drawTime(ctx, radius);
                    }

                    function drawFace(ctx, radius) {
                        var grad;
                        ctx.beginPath();
                        ctx.arc(0, 0, radius, 0, 2 * Math.PI);
                        ctx.fillStyle = 'white';
                        ctx.fill();
                        grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
                        grad.addColorStop(0, '#333');
                        grad.addColorStop(0.5, 'yellow');
                        grad.addColorStop(1, '#333');
                        ctx.strokeStyle = grad;
                        ctx.lineWidth = radius * 0.1;
                        ctx.stroke();
                        ctx.beginPath();
                        ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
                        ctx.fillStyle = '#333';
                        ctx.fill();
                    }

                    function drawNumbers(ctx, radius) {
                        var ang;
                        var num;
                        ctx.font = radius * 0.15 + "px arial";
                        ctx.textBaseline = "middle";
                        ctx.textAlign = "center";
                        for (num = 1; num < 13; num++) {
                            ang = num * Math.PI / 6;
                            ctx.rotate(ang);
                            ctx.translate(0, -radius * 0.85);
                            ctx.rotate(-ang);
                            ctx.fillText(num.toString(), 0, 0);
                            ctx.rotate(ang);
                            ctx.translate(0, radius * 0.85);
                            ctx.rotate(-ang);
                        }
                    }

                    function drawTime(ctx, radius) {
                        var now = new Date();
                        var hour = now.getHours();
                        var minute = now.getMinutes();
                        var second = now.getSeconds();
                        //hour
                        hour = hour % 12;
                        hour = (hour * Math.PI / 6) +
                            (minute * Math.PI / (6 * 60)) +
                            (second * Math.PI / (360 * 60));
                        drawHand(ctx, hour, radius * 0.5, radius * 0.07);
                        //minute
                        minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
                        drawHand(ctx, minute, radius * 0.8, radius * 0.07);
                        // second
                        second = (second * Math.PI / 30);
                        drawHand(ctx, second, radius * 0.9, radius * 0.02);
                    }

                    function drawHand(ctx, pos, length, width) {
                        ctx.beginPath();
                        ctx.lineWidth = width;
                        ctx.lineCap = "round";
                        ctx.moveTo(0, 0);
                        ctx.rotate(pos);
                        ctx.lineTo(0, -length);
                        ctx.stroke();
                        ctx.rotate(-pos);
                    }
                </script>


            </div>
            @*<h2>@ViewBag.date</h2>
        <h2>@ViewBag.time</h2>*@

            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="glyphicon glyphicon-user"></i>
                    </div>
                    <input type="text" class="form-control" name="username" id="username" placeholder="Username" autocomplete="off" />
                </div>
                <h4 class="alert-danger">@ViewBag.username</h4>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class=" glyphicon glyphicon-lock "></i>
                    </div>
                    <input type="password" class="form-control" name="password" id="password" placeholder="Password" autocomplete="off" />
                </div>
            </div>
            <h4 class="alert-danger">@ViewBag.password</h4>
            <h4 class="alert-danger">@ViewBag.loginfail</h4><br />
            <h4 class="alert-success">@ViewBag.clientmessage</h4>
            <h4 class="alert-success">@ViewBag.employeemessage</h4>
            <h4 class="alert-success">@ViewBag.emessage</h4>
            <h4 class="alert-success">@ViewBag.cmessage</h4>
            <button class="btn btn-lg btn-primary " type="submit">Sign in</button>
        </form>
    </div>
    <div class="clearfix"></div>
    <br><br>

</body>
</html>

